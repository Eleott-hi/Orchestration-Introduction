# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
# Vagrant.configure("2") do |config|
#   # The most common configuration options are documented and commented below.
#   # For a complete reference, please see the online documentation at
#   # https://docs.vagrantup.com.

#   # Every Vagrant development environment requires a box. You can search for
#   # boxes at https://vagrantcloud.com/search.
  
#   config.vm.define "manager01" do |manager|
#     manager.vm.box = "Boxes/focal-server-cloudimg-amd64-vagrant.box"
#     manager.vm.hostname = "manager01"
#     # manager.vm.network "private_network", type: "dhcp"
#     # manager.vm.provision "shell", path: "install_manager.sh"
#     # config.vm.synced_folder "./manager", "/home/vagrant/"
#     config.vm.synced_folder "./manager", path: "/home/vagrant/data"
#   end

#   # Настройка первого рабочего узла
#   # config.vm.define "worker01" do |worker|
#   #   worker.vm.box = "Boxes/focal-server-cloudimg-amd64-vagrant.box"
#   #   worker.vm.hostname = "worker01"
#   #   worker.vm.network "private_network", type: "dhcp"
#   #   worker.vm.provision "shell", path: "install_worker.sh"
#   # end

#   # # Настройка второго рабочего узла
#   # config.vm.define "worker02" do |worker|
#   #   worker.vm.box = "Boxes/focal-server-cloudimg-amd64-vagrant.box"
#   #   worker.vm.hostname = "worker02"
#   #   worker.vm.network "private_network", type: "dhcp"
#   #   worker.vm.provision "shell", path: "install_worker.sh"
#   # end

#   # Disable automatic box update checking. If you disable this, then
#   # boxes will only be checked for updates when the user runs
#   # `vagrant box outdated`. This is not recommended.
#   # config.vm.box_check_update = false

#   # Create a forwarded port mapping which allows access to a specific port
#   # within the machine from a port on the host machine. In the example below,
#   # accessing "localhost:8080" will access port 80 on the guest machine.
#   # NOTE: This will enable public access to the opened port
#   # config.vm.network "forwarded_port", guest: 80, host: 8080

#   # Create a forwarded port mapping which allows access to a specific port
#   # within the machine from a port on the host machine and only allow access
#   # via 127.0.0.1 to disable public access
#   # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

#   # Create a private network, which allows host-only access to the machine
#   # using a specific IP.
#   # config.vm.network "private_network", ip: "192.168.33.10"

#   # Create a public network, which generally matched to bridged network.
#   # Bridged networks make the machine appear as another physical device on
#   # your network.
#   # config.vm.network "public_network"

#   # Share an additional folder to the guest VM. The first argument is
#   # the path on the host to the actual folder. The second argument is
#   # the path on the guest to mount the folder. And the optional third
#   # argument is a set of non-required options.
#   # config.vm.synced_folder "../data", "/vagrant_data"

#   # Disable the default share of the current code directory. Doing this
#   # provides improved isolation between the vagrant box and your host
#   # by making sure your Vagrantfile isn't accessible to the vagrant box.
#   # If you use this you may want to enable additional shared subfolders as
#   # shown above.
#   # config.vm.synced_folder ".", "/vagrant", disabled: true

#   # Provider-specific configuration so you can fine-tune various
#   # backing providers for Vagrant. These expose provider-specific options.
#   # Example for VirtualBox:
#   #
#   # config.vm.provider "virtualbox" do |vb|
#   #   # Display the VirtualBox GUI when booting the machine
#   #   vb.gui = true
#   #
#   #   # Customize the amount of memory on the VM:
#   #   vb.memory = "1024"
#   # end
#   #
#   # View the documentation for the provider you are using for more
#   # information on available options.

#   # Enable provisioning with a shell script. Additional provisioners such as
#   # Ansible, Chef, Docker, Puppet and Salt are also available. Please see the
#   # documentation for more information about their specific syntax and use.
#   # config.vm.provision "shell", inline: <<-SHELL
#   #   apt-get update
#   #   apt-get install -y apache2
#   # SHELL
# end


$install_docker_script = <<SCRIPT
echo Installing Docker...
apt-get update
apt-get upgrade -y
apt-get install -y docker.io net-tools
SCRIPT

$manager_script = <<SCRIPT
echo Swarm Init...
sudo docker swarm init --listen-addr 10.100.199.200:2377 --advertise-addr 10.100.199.200:2377
sudo docker swarm join-token --quiet worker > /vagrant/worker_token
SCRIPT

$worker_script = <<SCRIPT
echo Swarm Join...
sudo docker swarm join --token $(cat /vagrant/worker_token) 10.100.199.200:2377
SCRIPT

Vagrant.configure('2') do |config|
  # vm_box = "ubuntu/focal64"             # If you could downlowd box using VPN
  vm_box = "Boxes/focal-server-cloudimg-amd64-vagrant.box"

  config.vm.define "manager01", primary: true  do |manager|
    manager.vm.box = vm_box
    manager.vm.network :private_network, ip: "10.100.199.200"
    # nginx's ports
    manager.vm.network :forwarded_port, guest: 8081, host: 8081
    manager.vm.network :forwarded_port, guest: 8087, host: 8087
    # portainer's ports
    manager.vm.network :forwarded_port, guest: 9000, host: 9000
    manager.vm.network :forwarded_port, guest: 8000, host: 8000
    manager.vm.network :forwarded_port, guest: 9443, host: 9443

    manager.vm.hostname = "manager01"
    manager.vm.synced_folder ".", "/vagrant"
    manager.vm.provision "shell", inline: $install_docker_script, privileged: true
    manager.vm.provision "shell", inline: $manager_script, privileged: true
    manager.vm.provider "virtualbox" do |vb|
      vb.name = "manager01"
      vb.memory = "4000"
    end
  end

  (1..2).each do |i|
    config.vm.define "worker0#{i}" do |worker|
      worker.vm.box = vm_box
      worker.vm.network :private_network, ip: "10.100.199.20#{i}"
      worker.vm.hostname = "worker0#{i}"
      worker.vm.synced_folder ".", "/vagrant"
      worker.vm.provision "shell", inline: $install_docker_script, privileged: true
      worker.vm.provision "shell", inline: $worker_script, privileged: true
      worker.vm.provider "virtualbox" do |vb|
        vb.name = "worker0#{i}"
        vb.memory = "4000"
      end
    end
  end
end